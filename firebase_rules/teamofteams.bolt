// USER #### START

type UserStatusType extends Number {
  validate() = this == -1 || this == 0 || this == 1;
}

type NameLength extends String {
  validate() = this.length >=3;
}

type User {
  //validate() = this.dateCreated == now;

  email: String,
  firstName: NameLength,
  lastName: NameLength,
  'date-created': CurrentTimestamp,
  status: UserStatusType
}

isAnyAuthUser() = auth != null;

isAuthUser(userID) = auth.uid == userID;

path /users {
  read() = isAnyAuthUser();
}

path /users/$userid is User {
  write() = isAuthUser($userid);
}

// USER #### END


//USERS PRESENCE RULES IN BOLT #### START

type Users_presence {
  'last-modified': CurrentTimestamp,
  'defined-status': Number,
  
}
type User_PrensenceConnection {
  type: Number,
  started: CurrentTimestamp 
}


path /users_presence/$userid { 
  read() = isAuthenticated();
  write() = isUserWithoutId();
}

path /users_presence/$userid/last_modified { 
  validate() = this.isNumber() && this <= now;
}

path /users_presence/$userid/defined_status { 
  validate() = this.isNumber(); 
}

path /users_presence/$userid/connections/$connectionID is  User_PrensenceConnection{
}


//USERS PRESENCE RULES IN BOLT #### END





//USER GROUP MEMBERSHIPS RULES in BOLT #### START


type UserGroupMemberShipsMemberShipTypeNumber extends Number{
  validate() = (validateNumberShouldBe(this, -1) || validateNumberShouldBe(this, 0) || validateNumberShouldBe(this, 1) || validateNumberShouldBe(this, 2) || validateNumberShouldBe(this, 3));
}

type User_group_memberships {
  'membership-type': UserGroupMemberShipsMemberShipTypeNumber,
  timestamp: CurrentTimestamp,
}

path /user_group_memberships/$userid {
  validate() = prior(isUserExists($userid)) ;
  read() = isUser($userid);
}

path /user_group_memberships/$userid/$groupid is User_group_memberships {
  read() = (isUserGroupMemberShipExists() && (isUserGroupMemberShipEquals(1) || isUserGroupMemberShipEquals(2)));
  write() = ( prior(this) == null && isUser($userid) && (this.membership_type == 1 || this.membership_type == 0)) || (prior(isUserGroupMemberShipExists()) && prior(isUserGroupMemberShipGreaterZero())) ;
}


//USER GROUP MEMBERSHIPS RULES in BOLT #### END


//Group Members #### START

path /group_members/$groupid {
  read() = isGroupMemberinGroupIDwithAuthIdExists() && isGroupMemberGroupIDAuthIdMemberShipGreaterZero();
}

path /group_members/$groupid/$userid is User_group_memberships {
  read() = isUser($userid);
  write() = (prior(this == null) && isUser($userid) && (this.membership_type == 1)) || (prior(isUserGroupMemberShipExists()) && (prior(isUserGroupMemberShipEquals(1)) || prior(isUserGroupMemberShipEquals(2))));
}

//Group Members #### END

 //GROUP RULES in BOLT #### START

type Members_checked_Obj {
  count: SubGroupMemberCountNumber,
  'checked-in': Object
}

type Logo_image_Obj {
validate() = this.hasChildren(['url', 'id', 'bucket-name', 'source', 'mediaType']);
}

type Privacy_Obj {
  invitationType: GroupPrivacyInvitationType,
  //"logo-image": Logo_image_Obj
}

type GroupTitleString extends String {
  validate() = validateStringMinMax(this, 4, 40);
}

type GroupDescString extends String {
  validate() = validateStringMinMax(this, 4, 100);
}

type GroupMemberCountNumber extends Number {
  validate() = validateNumberGreaterThenEquals(this, 1);
}

type SubGroupMemberCountNumber extends Number {
  validate() = validateNumberGreaterThenEquals(this, 0);
  //write() = prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
}

type GroupAddressString extends String {
  validate() = validateStringMinMax(this, 4, 200);
}

type GroupPhoneString extends String {
  validate() = validateStringMinMax(this, 11, 100);
}

type GroupPrivacyInvitationType extends Number {
  validate() = validateNumberShouldBe(this, 1)  || validateNumberShouldBe(this, 2) || validateNumberShouldBe(this, 3);
}


type Group{
  title: GroupTitleString,
  desc: GroupDescString,
  timestamp: CurrentTimestamp,
  "members-count": GroupMemberCountNumber,
  "subgroups-count": SubGroupMemberCountNumber,
  //'members-checked-in': Members_checked_Obj,
  address: GroupAddressString,
  phone: GroupPhoneString,
  timeZone: GroupDescString,
  //privacy: Privacy_Obj
}

path /groups/$groupid is Group {
  read() = isUserGroupMemberShipExists() && isUserGroupMemberShipGreaterZero();
  write() = prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
  validate() = this.hasChildren(['members-checked-in', 'logo-image', 'privacy']);
}

path /groups/$groupid/privacy/invitationType {
  validate() = this.isNumber() && validateNumberShouldBe(this, 1)  || validateNumberShouldBe(this, 2) || validateNumberShouldBe(this, 3);
}

path /groups/$groupid/members_checked_in/count {
  validate() = this.isNumber() && this >= 0;
  write() = prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
}
 
path /groups/$groupid/members_checked_in/checked_in/$userid {
  validate() = prior(isUserExists(auth.uid));
  write() = isUser($userid) && prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
}
 
 path /groups/logo_image  {
  validate() = this.hasChildren(['url', 'id', 'bucket-name', 'source', 'mediaType']);
}
 
 //GROUP MEMBERS RULES in BOLT #### END
 

 //GROUPS NAME #### START
 
 path /groups_names {
  read()  = isAuthenticated();
 }
  path /groups_names/$groupid {
  write() = prior(isGroupMemberinGroupIDwithAuthIdExists()) && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(2)));
 }
 
 //GROUPS NAME #### END
 
  //GROUP ACTIVITY STREAMS #### START
 
 path /group_activity_streams/$groupid {
  read() =  isGroupMemberinGroupIDwithAuthIdExists() && isGroupMemberGroupIDAuthIdMemberShipGreaterZero();            
  write() = prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
  validate() = prior(root['groups/' + $groupid] != null); //prior(root['groups'][$groupid] != null);
 }
 
 //GROUP ACTIVITY STREAMS #### END


 //GROUP CHECK IN CURRENT   #### START
 
 path /group_check_in_current/$groupid {
  read() = isGroupMemberinGroupIDwithAuthIdExists() && isGroupMemberGroupIDAuthIdMemberShipGreaterZero();
  write() = isAuthenticated() && prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
 }
 
 path /group_check_in_current/$groupid/$userid {
  write() = isUserWithoutId() && prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
 }
 
 //GROUP CHECK IN CURRENT   #### END
 
 
 
 //GROUP CHECK IN RECORDS #### START
 
 path /group_check_in_records/$groupid {
  read() = isGroupMemberinGroupIDwithAuthIdExists() && isGroupMemberGroupIDAuthIdMemberShipGreaterZero();
  write() = isAuthenticated() && prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
 }
 
 path /group_check_in_records/$groupid/$userid {
  write() = isUserWithoutId() && prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
 }
 
 //GROUP CHECK IN RECORDS #### END
 
 
 //GROUP LOCATION DEFINED ### START
 
 path /group_locations_defined/$groupid {
  read() = isGroupMemberinGroupIDwithAuthIdExists() && isGroupMemberGroupIDAuthIdMemberShipGreaterZero();
  write() = isAuthenticated() && prior(isGroupMemberinGroupIDwithAuthIdExists()) && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(2)));
 }

 //GROUP LOCATIon DEFINED ### END


//Group MemberShip REQUEST ### START
 
  path /group_membership_requests/$groupid {
  read() = isGroupMemberinGroupIDwithAuthIdExists() && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(2)));
  write() = isAuthenticated() && prior(isGroupMemberinGroupIDwithAuthIdExists()) && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(2)));
 }
 
 path /group_membership_requests/$groupid/$userid {
  read() = isUserWithoutId();
  write() = isUserWithoutId();
 }
 
 //GROUP MEMBERSHIP REQUEST ### END


//MemberShip Request By User ### START
 

 path /group_membership_requests_by_user/$userid {
  read() = isUserWithoutId();
  write() = isUserWithoutId();
 }
 
  path /group_membership_requests_by_user/$userid/$groupid {
  read()  = prior(isGroupMemberinGroupIDwithAuthIdExists()) && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(2)));
  write() = prior(isGroupMemberinGroupIDwithAuthIdExists()) && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(2)));
 }
 
 
//MemberShip Request By User ### END

//SUBGROUP #### START

type SubGroupMemberschecked_Obj {
  count: SubGroupMemberCountNumber,
} 

type GroupMemberCountNumber2 extends Number{
  validate() = this >= 0;
}

type SubGroupMemberCountNumber2 extends Number {
  validate() = this >= 0;
}
 
 type SubgroupsSubgroupID {
  title: GroupTitleString,
  desc: GroupDescString,
  timestamp: CurrentTimestamp,
  "members-count": GroupMemberCountNumber2,
  "subgroups-count": SubGroupMemberCountNumber2,
  //'members-checked-in': SubGroupMemberschecked_Obj,
  'logo-image': Logo_image_Obj
 }
 
 
 path /subgroups/$groupid {
  read() =   isGroupMemberinGroupIDwithAuthIdExists() && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(2)));
  write() = prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
 }
 
 path /subgroups/$groupid/$subgroupid is SubgroupsSubgroupID {
  //read() = isSubGroupMemberGroupIdSubGroupIpAuthIdExists() && isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero();
  read() = root['subgroup-members'][$groupid][$subgroupid][auth.uid]['membership-type'] != null && isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero();
  write() = prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) && ( prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(1)) || prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(2)));
  validate() = this.hasChildren(['members-checked-in']);
 }
 
 
 path /subgroups/$groupid/$subgroupid/members_checked_in/count {
    validate() =  this  >= 0 && this.isNumber();
    write() = prior(root['subgroup-members'][$groupid][$subgroupid][auth.uid]['membership-type'] != null) &&  prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero());
    //write() = prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) &&  prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero());
    
 }
 
  path /subgroups/$groupid/$subgroupid/members_checked_in/checked_in/$userid {
  //write() = isUserWithoutId() && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero());
  write() = isUserWithoutId() && prior(root['subgroup-members'][$groupid][$subgroupid][auth.uid]['membership-type'] != null) && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero());
  validate() = prior(root['users/' + $userid] != null);
 }
 

 //SUBGROUP #### END
 

//SUBGROUP NAMES #### START
 
path /subgroups_names/$groupid {
  read() = isGroupMemberinGroupIDwithAuthIdExists() && isGroupMemberGroupIDAuthIdMemberShipGreaterZero();
  write() = prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
 }
 
path /subgroups_names/$groupid/$subgroupid {
  //read() = isSubGroupMemberGroupIdSubGroupIpAuthIdExists() &&  isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero();
  read() = root['subgroup-members'][$groupid][$subgroupid][auth.uid]['membership-type'] != null &&  isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero();
  
}
 
 //SUBGROUP NAMES #### END



 //SUb GROUP MEMBERS #### START
 
 type SubGroupMemberUserMemberShipType extends Number {
  validate() = this == -1 || this == 0 || this == 1 || this == 2 || this == 3;
 }
 
 type SubGroupMemberUser {
 'membership-type' : SubGroupMemberUserMemberShipType, 
 timestamp: CurrentTimestamp
 }
 
 path /subgroup_members/$groupid {
  read() = isGroupMemberinGroupIDwithAuthIdExists() && (isGroupMemberGroupIDAuthIdMemberShipEuqals(1) || isGroupMemberGroupIDAuthIdMemberShipEuqals(2));
  write() =  prior(isGroupMemberinGroupIDwithAuthIdExists()) && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(2)));
 }
 
 path /subgroup_members/$groupid/$subgroupid {
  read() =  isSubGroupMemberGroupIdSubGroupIpAuthIdExists() &&  isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero();
 }
  
  path /subgroup_members/$groupid/$subgroupid/$userid is SubGroupMemberUser{
    read() = isUserWithoutId();
 }

 //SUB GROUP MEMEBRS #### END
 

 
//Flattened Groups #### START
  
path /flattened_groups {
  read() = true;
  write() = true;
}

//Flattened Groups #### END


//Sub Group Activity Streams #### START

path /subgroup_activity_streams/$groupid {
  read() = isAuthenticated() && isGroupMemberinGroupIDwithAuthIdExists() && (isGroupMemberGroupIDAuthIdMemberShipEuqals(1) || isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
  write() =  isAuthenticated() && prior(isGroupMemberinGroupIDwithAuthIdExists()) && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(root['group-members'][$groupid][auth.uid]['membership-type'] > 2));
}

path /subgroup_activity_streams/$groupid/$subgroupid {
  write() = isAuthenticated() && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) && (  prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(1)) ||  prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(2)));
}


type ActorType {
  validate() = this.id === auth.uid;
}

type SubGroupActivityID {
  validate() = this.hasChildren(['actor', 'displayName', 'language', 'published', 'target', 'verb']) && this.actor.id === auth.uid;
}

path /subgroup_activity_streams/$groupid/$subgroupid/$activityid is SubGroupActivityID {
  write() = isAuthenticated() &&  prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero());
}


//Sub Group Activity Streams #### END



//Sub Group Check in Current #### START

path /subgroup_check_in_current/$groupid {
  read() = isAuthenticated() && isGroupMemberinGroupIDwithAuthIdExists() && isGroupMemberGroupIDAuthIdMemberShipGreaterZero();
  write() = isAuthenticated() && prior(isGroupMemberinGroupIDwithAuthIdExists()) && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero()));
}

path /subgroup_check_in_current/$groupid/$subgroupid {
  write() = isAuthenticated() && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) && (  prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(1)) ||  prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(2)));
}

type SubGroupCheckCurretUser {
  validate() = this.hasChildren(['identified-location-id', 'location', 'message', 'record-ref', 'source-device-type', 'source-type', 'subgroup-url', 'timestamp', 'type']);
}

path /subgroup_check_in_current/$groupid/$subgroupid/$userid is SubGroupCheckCurretUser {
  write() =  auth != null && auth.uid != $userid && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero());
}

//Sub Group Check in Current #### END

 
//SubGroup Check in Current by User ### START

path /subgroup_check_in_current_by_user/$userid {
  read() = isUserWithoutId() || root['users'][$userid] != null;
  write() = isAuthenticated() && prior(root['group-members'])[this.groupID][auth.uid] != null && ( prior(root['group-members'])[this.groupID][auth.uid]['membership-type'] == 1 || prior(root['group-members'])[this.groupID][auth.uid]['membership-type'] > 0 );
}
//SubGroup Check in Current by User ### END



 //SubGroup Check In Records  #### START
 
path /subgroup_check_in_records/$groupid {
  read() = isAuthenticated() && isGroupMemberinGroupIDwithAuthIdExists() && (isGroupMemberGroupIDAuthIdMemberShipEuqals(1) || isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
  write() =  isAuthenticated() && prior(isGroupMemberinGroupIDwithAuthIdExists()) && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(2)));
}
  
 path /subgroup_check_in_records/$groupid/$subgroupid {
  read() = isAuthenticated() && isSubGroupMemberGroupIdSubGroupIpAuthIdExists() && (isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(1) || isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(2));
  write() = isAuthenticated() && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) && (  prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(1)) ||  prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(2)));
 }
 
 path /subgroup_check_in_records/$groupid/$subgroupid/$userid {
  write() = isUserWithoutId() && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero());
 }
 
 //SubGroup Check In Records  #### END




 //SubGroup Location Defined #### START
 
 path /subgroup_locations_defined/$groupid {
  read() = isAuthenticated() && isGroupMemberinGroupIDwithAuthIdExists() && (isGroupMemberGroupIDAuthIdMemberShipEuqals(1) || isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
  write() =  isAuthenticated() && prior(isGroupMemberinGroupIDwithAuthIdExists()) && (prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(1)) || prior(isGroupMemberGroupIDAuthIdMemberShipEuqals(2)));
 }
 
 path /subgroup_locations_defined/$groupid/$subgroupid {
  read() = isAuthenticated() && isSubGroupMemberGroupIdSubGroupIpAuthIdExists() && (isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(1) || isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(2));
  write() = isAuthenticated() && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) && (prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(1)) || prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(2)));
 }
 
 path /subgroup_locations_defined/$groupid/$subgroupid/$locid {
  read() = isAuthenticated() && isSubGroupMemberGroupIdSubGroupIpAuthIdExists() && isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero();
  write() = isAuthenticated() && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdExists()) && prior(isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero());
  validate() = this.hasChildren(['defined-by', 'location', 'subgroup-url', 'title', 'timestamp', 'type']);
 }
 
 //SubGroup Location Defined #### END



 //User Sub Group MemberShips #### START
 
 path /user_subgroup_memberships/$userid {
  //read() = isUserWithoutId() && (root['users'][$userid] != null);
  read() = (auth.uid == $userid || ( auth.uid != null && root['users'][$userid] != null ));
  
  validate() = prior(root['users/' + $userid] != null);
 }
 
 path /user_subgroup_memberships/$userid/$groupid {
  read() = isUserGroupMemberShipExists() && (isUserGroupMemberShipEquals(1) || isUserGroupMemberShipEquals(2));
  write() = prior(isUserGroupMemberShipExists()) && (prior(isUserGroupMemberShipEquals(1)) || prior(isUserGroupMemberShipEquals(2)));
 }
 
 type UserSubGroupMemberShipSubGroup {
  'membership-type': UserGroupMemberShipsMemberShipTypeNumber,
  timestamp: CurrentTimestamp,
 }
 
 path /user_subgroup_memberships/$userid/$groupid/$subgroupid is UserSubGroupMemberShipSubGroup {
  read() = root['user-subgroup-memberships'][auth.uid][$groupid] != null && (root['user-subgroup-memberships'][auth.uid][$groupid]['membership-type'] == 1 || root['user-subgroup-memberships'][auth.uid][$groupid]['membership-type'] == 2);
  write() = prior(root['user-subgroup-memberships'][auth.uid][$groupid]) != null && (prior(root['user-subgroup-memberships'][auth.uid][$groupid]['membership-type']) == 1 || prior(root['user-subgroup-memberships'][auth.uid][$groupid]['membership-type']) == 2);
 }
 
 // User Sub Group Memeberships #### END
 
 // Sub Group MemberShip Requests #### START 
 
 path /subgroup_membership_requests/$groupid {
	read() = isUserGroupMemberShipExists() && ( isUserGroupMemberShipEquals(1) || isUserGroupMemberShipEquals(2));
 write() = prior(isUserGroupMemberShipExists()) && ( prior(isUserGroupMemberShipEquals(1)) || prior(isUserGroupMemberShipEquals(2)) );
}

path /subgroup_membership_requests/$groupid/$subgroupid {
	 read() = isUserGroupMemberShipGreaterZero();
	 write() = prior(isUserGroupMemberShipGreaterZero());
}

type SubgroupMemberShipReqUseridMessage extends String {
  validate() = validateStringMinMax(this, 10, 40);
}

type SubgroupMemberShipReqUserId {
validate() = prior(root['users/' + $userid] != null);
'message': SubgroupMemberShipReqUseridMessage, 
'timestamp': CurrentTimestamp
}

path /subgroup_membership_requests/$groupid/$subgroupid/$userid is SubgroupMemberShipReqUserId  {
	read() = auth.uid == $userid;
	write() = auth.uid == $userid;
}

// Sub Group MemberShip Requests #### END



//Sub Group MemberShip Requests By User #### START

path /subgroup_membership_requests_by_user/$userid {
	read() = (auth.uid == $userid);
	validate() =  prior(root['users/' + $userid] != null);
}

path /subgroup_membership_requests_by_user/$userid/$groupid {
	read() = isUserGroupMemberShipExists() && isUserGroupMemberShipGreaterZero();
	write() = prior(isUserGroupMemberShipExists()) && prior(isUserGroupMemberShipGreaterZero());
}

type SubGroupReqByUserSubGroup {
'timestamp': CurrentTimestamp
}

path /subgroup_membership_requests_by_user/$userid/$groupid/$subgroupid is SubGroupReqByUserSubGroup {
	read() = isUserGroupMemberShipExists() && isUserGroupMemberShipGreaterZero();
}
 
//Sub Group MemberShip Requests By User #### END

//Group Private Chat #### START

path /group_private_chats/$groupid/$chatid {
	read() = (auth != null) && root['user-private-chat-refs'][auth.uid][$groupid][$chatid] != null;
}

path /group_private_chats/$groupid/$chatid/$automessageid {
	write() = (auth != null) && prior(root['user-private-chat-refs'][auth.uid][$groupid][$chatid]) != null && prior(this != null);
}

//Group Private Chat #### END

//Uer Private Chat ### START

path /user_private_chat_refs/$userid/$groupid {
 read() = (auth != null && auth.uid == $userid);
  write() = (auth != null && auth.uid == $userid && prior(isUserGroupMemberShipExists()) && prior(isUserGroupMemberShipGreaterZero()));
}

//Uer Private Chat ### END



//Group Chats #### START

path /group_chats/$groupid {
 	read() = (auth != null) && isGroupMemberinGroupIDwithAuthIdExists() && isGroupMemberGroupIDAuthIdMemberShipGreaterZero();
  write() = (auth != null) && prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
  validate() =  prior(root['groups/' + $groupid] != null);
}

type ValidateCreatedBy {
  //validate() =  (prior(root['users/' + this]) != null && auth.uid == this);
    validate() = ((prior(root['users'])[this] != null) && (auth.uid == this));
}
//

type GroupChatChattopicid {
  'title': GroupDescString, 
  'timestamp': CurrentTimestamp, 
  'created-by': ValidateCreatedBy,
}

path /group_chats/$groupid/$chattopicid is GroupChatChattopicid  {
 	
}

path /group_chats/$groupid/$chattopicid/messages/$messageid {
	validate() =  prior(this == null) && this.hasChildren(['from', 'timestamp', 'text']);
}

//Group Chats #### END



//Sub Group Chats #### START

path /subgroup_chats/$groupid {
	read() = isGroupMemberinGroupIDwithAuthIdExists() && ( isGroupMemberGroupIDAuthIdMemberShipEuqals(1) || isGroupMemberGroupIDAuthIdMemberShipEuqals(2));
}

path /subgroup_chats/$groupid/$subgroupid {
	read() = (auth != null) && root['subgroup-members'][$groupid][$subgroupid][auth.uid] != null && root['subgroup-members'][$groupid][$subgroupid][auth.uid]['membership-type'] > 0;
	write() = (auth != null) && prior(root['subgroup-members'][$groupid][$subgroupid][auth.uid] != null) && prior(root['subgroup-members'][$groupid][$subgroupid][auth.uid]['membership-type'] > 0);
	validate() =  prior(root['subgroups/' + $groupid + '/' + $subgroupid] != null);
}

path /subgroup_chats/$groupid/$subgroupid/$chattopicid is GroupChatChattopicid  {
	
}


path /subgroup_chats/$groupid/$subgroupid/$chattopicid/messages/$messageid {
	validate() =  prior(this == null) && this.hasChildren(['from', 'timestamp', 'text']);
}
        
//Sub Group Chats #### END

//TASKS #### START

path /tasks/$groupid {
	read() = (auth != null) && isGroupMemberinGroupIDwithAuthIdExists() && isGroupMemberGroupIDAuthIdMemberShipGreaterZero();
	write() = (auth != null) && prior(isGroupMemberinGroupIDwithAuthIdExists()) && prior(isGroupMemberGroupIDAuthIdMemberShipGreaterZero());
}
		
//TASKS #### END





// Helpers #### START

initial(value, init) = value == (prior(value) == null ? init : prior(value));

type CurrentTimestamp extends Number {
  validate() = this <= now;
}

type InitialTimestamp extends Number {
  validate() = initial(this, now);
}

//if user authenticated
isAuthenticated() = (auth != null);
isUser(uid) = (auth != null && auth.uid == uid);
isUserWithoutId() = (auth != null && auth.uid == $userid);

//user exits in users path
isUserExists(uid) = (root['users'][uid] != null);

//String Validate Min & Max Equals to
validateStringMinMax(that, min, max) = (that.length >= min && that.length <= max);

//String Validate Min Euquals to
validateStringMin(that, min) = (that.length >= min);

//Number Validations Should Be
validateNumberShouldBe(that, num) = (that == num);

//Number Validations Greater Then
validateNumberGreaterThen(that, num) = (that > num);

//Number Validations Greater Then Equals too
validateNumberGreaterThenEquals(that, num) = (that >= num);

//Number Validation Less then Equals too
validateNumberLessThenEquals(that, num) = (that <= num);

//Group Member + GroupID + auth.uid is Exists
isGroupMemberinGroupIDwithAuthIdExists() = (root['group-members'][$groupid][auth.uid] != null);

//Checking MemeberShip Type Greater then ZERO
isGroupMemberGroupIDAuthIdMemberShipGreaterZero() = (root['group-members'][$groupid][auth.uid]['membership-type'] > 0); 

//Checking MemeberShip Type Equal Too
isGroupMemberGroupIDAuthIdMemberShipEuqals(dig) = (root['group-members'][$groupid][auth.uid]['membership-type'] == dig);
 
//Checking SubGropMemebr + GroupIP + SubGroupID + Auth Exists
isSubGroupMemberGroupIdSubGroupIpAuthIdExists() = (root['subgroup-members'][$groupid][$subgroupid][auth.uid] != null);
 
//Checking SubGroup MemeberShip Type Greater then Equals ZERO
isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterEqualsZero() = (root['subgroup-members'][$groupid][$subgroupid][auth.uid]['membership-type'] >= 0); 

//Checking SubGroup MemeberShip Type Greater then Equals ZERO
isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeGreaterZero() = (root['subgroup-members'][$groupid][$subgroupid][auth.uid]['membership-type'] > 0);

//Checking Subgroup MemeberShip Type Equal Too
isSubGroupMemberGroupIdSubGroupIpAuthIdMemberTypeEquals(dig) = (root['subgroup-members'][$groupid][$subgroupid][auth.uid]['membership-type'] == dig);
 
//Checking UserGroup MemberShip Exists
isUserGroupMemberShipExists() = (root['user-group-memberships'][auth.uid][$groupid] != null);
 
//User group MemberShip Type Equals To
isUserGroupMemberShipEquals(dig) = (root['user-group-memberships'][auth.uid][$groupid]['membership-type'] == dig);                                 
 
//User group MemberShip Type Equals To
isUserGroupMemberShipGreaterZero() = (root['user-group-memberships'][auth.uid][$groupid]['membership-type'] > 0);  



// Helpers #### END
