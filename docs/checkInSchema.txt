Firebase Check-in Schema Version 2.0 Draft
 
//Note: A check-in belongs to a group, subgroup or microgroup.  


group-check-in-current : { //this is the last entered current status it is also copied to records at the same time, when updated it will be over-written here
	groupID1 : (
		userID1 : { // the 
			id: autoGeneratedTimestampBasedRecordID // from record
			subgroup-url: orgID1
			timestamp: timestamp,
			type: 1, // 1 = in, 2 = out
			source-type: 1, //1 = manual in web or mobile, 2 = automatic by geo-fencing in mobile, 3 =  automatic by beacon’s in mobile
			source-device-type : 1, // 1 = Web, 2 = iPhone, 3 = Android 
			source-device-address: ip address or mobile number 
			message: This is a test status message // optional
			location: {//not present in case of beacon based check in and out or the user does not select or allow data
				lat : 24.8133877
				lon : 67.0454256
			},
			identified-location-id : hehe867kd // from locations-defined, it will not be present if cannot identify the location i.e. “Other Location”, 
							   // it will always be present in beacon based automatic check in and out
			record-ref: autoGeneratedTimestampBasedRecordID
							 
		}
	},
	

}

subgroup-check-in-current : { //this is the last entered current status it is also copied to records at the same time, when updated it will be over-written here
	groupID1 : {
	    subgroupID1 : {
		userID1 : { // the 
			id: autoGeneratedTimestampBasedRecordID // from record
			subgroup-url: orgID1
			timestamp: timestamp,
			type: 1, // 1 = in, 2 = out
			source-type: 1, //1 = manual in web or mobile, 2 = automatic by geo-fencing in mobile, 3 =  automatic by beacon’s in mobile
			source-device-type : 1, // 1 = Web, 2 = iPhone, 3 = Android 
			source-device-address: ip address or mobile number 
			message: This is a test status message // optional
			location: {//not present in case of beacon based check in and out or the user does not select or allow data
				lat : 24.8133877
				lon : 67.0454256
			},
			identified-location-id : hehe867kd // from locations-defined, it will not be present if cannot identify the location i.e. “Other Location”, 
							   // it will always be present in beacon based automatic check in and out
			record-ref: autoGeneratedTimestampBasedRecordID
							 
		}
	},
	

}

microgroup-check-in-current : { //this is the last entered current status it is also copied to records at the same time, when updated it will be over-written here
	groupID1 : {
	    subgroupID1 : {
		userID1 : { // the 
			id: autoGeneratedTimestampBasedRecordID // from record
			subgroup-url: orgID1
			timestamp: timestamp,
			type: 1, // 1 = in, 2 = out
			source-type: 1, //1 = manual in web or mobile, 2 = automatic by geo-fencing in mobile, 3 =  automatic by beacon’s in mobile
			source-device-type : 1, // 1 = Web, 2 = iPhone, 3 = Android 
			source-device-address: ip address or mobile number 
			message: This is a test status message // optional
			location: {//not present in case of beacon based check in and out or the user does not select or allow data
				lat : 24.8133877
				lon : 67.0454256
			},
			identified-location-id : hehe867kd // from locations-defined, it will not be present if cannot identify the location i.e. “Other Location”, 
							   // it will always be present in beacon based automatic check in and out
			record-ref: autoGeneratedTimestampBasedRecordID
							 
		}
	},
	

}

group-check-in-records : {
	groupID1 : {
		userID1 : {
		   autoGeneratedTimestampBasedRecordID : {	
		
			id: autoGeneratedTimestampBasedRecordID // from record
			subgroup-url: orgID1
			timestamp: timestamp,
			type: 1, // 1 = in, 2 = out
			source-type: 1, //1 = manual in web or mobile, 2 = automatic by geo-fencing in mobile, 3 =  automatic by beacon’s in mobile
			source-device-type : 1, // 1 = Web, 2 = iPhone, 3 = Android 
			source-device-address: ip address or mobile number 
			message: This is a test status message // optional
			location: {//not present in case of beacon based check in and out or the user does not select or allow data
				lat : 24.8133877
				lon : 67.0454256
			},
			identified-location-id : hehe867kd // from locations-defined, it will not be present if cannot identify the location i.e. “Other Location”, 
							   // it will always be present in beacon based automatic check in and out
                   }
			
			
		}
             }
	   }  
	},
	
}

subgroup-check-in-records : {
	groupID1 : {
           subgroupID1 : {
       
		userID1 : {
		   autoGeneratedTimestampBasedRecordID : {	
		
			id: autoGeneratedTimestampBasedRecordID // from record
			subgroup-url: orgID1
			timestamp: timestamp,
			type: 1, // 1 = in, 2 = out
			source-type: 1, //1 = manual in web or mobile, 2 = automatic by geo-fencing in mobile, 3 =  automatic by beacon’s in mobile
			source-device-type : 1, // 1 = Web, 2 = iPhone, 3 = Android 
			source-device-address: ip address or mobile number 
			message: This is a test status message // optional
			location: {//not present in case of beacon based check in and out or the user does not select or allow data
				lat : 24.8133877
				lon : 67.0454256
			},
			identified-location-id : hehe867kd // from locations-defined, it will not be present if cannot identify the location i.e. “Other Location”, 
							   // it will always be present in beacon based automatic check in and out
                   }
			
			
		}
             }
	   }  
	},
	
}







microgroup-check-in-records : {
	groupID1 : {
           subgroupID1 : {
              microgroupID1 : {
		userID1 : {
		   autoGeneratedTimestampBasedRecordID : {	
		
			id: autoGeneratedTimestampBasedRecordID // from record
			subgroup-url: orgID1
			timestamp: timestamp,
			type: 1, // 1 = in, 2 = out
			source-type: 1, //1 = manual in web or mobile, 2 = automatic by geo-fencing in mobile, 3 =  automatic by beacon’s in mobile
			source-device-type : 1, // 1 = Web, 2 = iPhone, 3 = Android 
			source-device-address: ip address or mobile number 
			message: This is a test status message // optional
			location: {//not present in case of beacon based check in and out or the user does not select or allow data
				lat : 24.8133877
				lon : 67.0454256
			},
			identified-location-id : hehe867kd // from locations-defined, it will not be present if cannot identify the location i.e. “Other Location”, 
							   // it will always be present in beacon based automatic check in and out
                   }
			
			
		}
             }
	   }  
	},
	
}

group-locations-defined : {// locations can be defined for group
	groupID1 : {
		autoGeneratedTimestampBasedID: {
			subgroup-url: groupID1,
			title : Panacloud Meatone Office,
			type: 1,// 1 = Geo location, 2 = Beacon
			location: {
				lat : 24.819977
				lon : 67.0499289
				radius: 22
			},
			beacons : {// either location or beacons will be provided depending on the type above 
				autoGeneratedTimestampBasedID : { // usually only one beacon will be provided, but more can be provided to select regions by using range of different beacons in combination
					uuid: fb0b57a2-8228-44 cd-913a-94a122ba1206, //http://en.wikipedia.org/wiki/IBeacon
					trigger-range: 3, //1 = Immediate: Within a few centimeters, 2 = Near: Within a couple of meters, 3 = Far: Greater than 10 meters away
					  // usually 3 will be selected
					  //https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/LocationAwarenessPG/RegionMonitoring/RegionMonitoring.html
					major: 1, //optional, used to specify a particular Beacon within group e.g. 1 = Offices in New York, 2 = Offices in San Francisco
					  //https://passkit.com/how-ibeacon-works/
					minor: 2  //optional, used to specify specific beacon e.g. 1 = Accounting Office, 2 = Sales, 3 = Marketing
				} 
				
			},
			defined-by: userID1, //only admins or owners can define a office location
			timestamp: timestamp,
			image: {//
     			 	url: "http://www.google.com/gc/locationBucket/orgID1/autoGeneratedTimestampBasedID.jpg",
			 	id: autoGeneratedTimestampBasedID.jpg, 
			 	bucket-name : locationBucket,
     			 	source: 1,// 1 = google cloud storage, 
     			 	mediaType: image/jpeg
   			},
			schedule-type: 0, // 0 = always e.g. office location, 1 = once i.e. one time event e.g. seminar, 2 = recurring event e.g. classes on Tuesday and Friday 11 am to 1 pm with optional start and end dates    
			event-once: {//will only be present if schedule-type is 1
				start-timestamp: timestamp,
				end-timestamp: timestamp,

			},
			event-recurring: {//will only be present if schedule-type is 2
				day: 1, // 0 = sunday, 1 = monday, 2 = tuesday, 3 = wednesday, 4 = thursday, 5 = friday, 6 = saturday
				start-time: hh:mm, //The time format is hh:mm, where: hh is the hour according to a 24-hour clock, mm is the minute
				end-time: hh:mm,
				start-date: dd:mm:yyyy, //option, The date format is dd:mm:eye, where: dd is the day according to 31 days, mm is 12 months, and yyyy is like 2015 
				end-date: dd:mm:yyyy, //optional, The date format is dd:mm:eye, where: dd is the day according to 31 days, mm is 12 months, and yyyy is like 2015
			}
		},
		

	
}

group-locations-defined : {// locations can be defined for group
	groupID1 : {
		autoGeneratedTimestampBasedID: {
			subgroup-url: groupID1,
			title : Panacloud Meatone Office,
			type: 1,// 1 = Geo location, 2 = Beacon
			location: {
				lat : 24.819977
				lon : 67.0499289
				radius: 22
			},
			beacons : {// either location or beacons will be provided depending on the type above 
				autoGeneratedTimestampBasedID : { // usually only one beacon will be provided, but more can be provided to select regions by using range of different beacons in combination
					uuid: fb0b57a2-8228-44 cd-913a-94a122ba1206, //http://en.wikipedia.org/wiki/IBeacon
					trigger-range: 3, //1 = Immediate: Within a few centimeters, 2 = Near: Within a couple of meters, 3 = Far: Greater than 10 meters away
					  // usually 3 will be selected
					  //https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/LocationAwarenessPG/RegionMonitoring/RegionMonitoring.html
					major: 1, //optional, used to specify a particular Beacon within group e.g. 1 = Offices in New York, 2 = Offices in San Francisco
					  //https://passkit.com/how-ibeacon-works/
					minor: 2  //optional, used to specify specific beacon e.g. 1 = Accounting Office, 2 = Sales, 3 = Marketing
				} 
				
			},
			defined-by: userID1, //only admins or owners can define a office location
			timestamp: timestamp,
			image: {//
     			 	url: "http://www.google.com/gc/locationBucket/orgID1/autoGeneratedTimestampBasedID.jpg",
			 	id: autoGeneratedTimestampBasedID.jpg, 
			 	bucket-name : locationBucket,
     			 	source: 1,// 1 = google cloud storage, 
     			 	mediaType: image/jpeg
   			},
			schedule-type: 0, // 0 = always e.g. office location, 1 = once i.e. one time event e.g. seminar, 2 = recurring event e.g. classes on Tuesday and Friday 11 am to 1 pm with optional start and end dates    
			event-once: {//will only be present if schedule-type is 1
				start-timestamp: timestamp,
				end-timestamp: timestamp,

			},
			event-recurring: {//will only be present if schedule-type is 2
				day: 1, // 0 = sunday, 1 = monday, 2 = tuesday, 3 = wednesday, 4 = thursday, 5 = friday, 6 = saturday
				start-time: hh:mm, //The time format is hh:mm, where: hh is the hour according to a 24-hour clock, mm is the minute
				end-time: hh:mm,
				start-date: dd:mm:yyyy, //option, The date format is dd:mm:eye, where: dd is the day according to 31 days, mm is 12 months, and yyyy is like 2015 
				end-date: dd:mm:yyyy, //optional, The date format is dd:mm:eye, where: dd is the day according to 31 days, mm is 12 months, and yyyy is like 2015
			}
		},
		

	
}



subgroup-activity-streams : { 
	groupID1 : {
	  subgroupID : {
		autoGeneratedTimestampBasedID : { // using the standard http://www.w3.org/TR/activitystreams-core/ , http://www.w3.org/TR/2014/WD-activitystreams-vocabulary-20141023/ 
						  // http://activitystrea.ms/specs/json/1.0/
			{
      				"language": "en",
      				"verb": “check-in”, //or check-out
      				"published": timestamp,
      				"displayName": “Zia Khan checked-in at Panacloud Meatone office: /n” + status message,
      				"actor": {
        				"type": “user”,
        				"id": “zia”, //this is the userID, and an index should be set on this
       					"displayName": “Zia Khan”,
					"image": {
     						"@id": "http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50",
     						"@type": "http://activitystrea.ms/2.0/Link",
     						"mediaType": "image/jpeg"
   					}
        			}      								
				"object" : {
   					"@type": “location”,
   					"@id": “autoGeneratedTimestampBasedRecordID”, //an index should be set on this
   					"url": “groupID/subgroupID1/checkin/autoGeneratedTimestampBasedRecordID”,
   					"displayName": “The location Title” //or “Another Location” if undefined
					"image": {//included if location is defined and has an image
     						"id": "http://www.google.com/gc/locationBucket/orgID1/autoGeneratedTimestampBasedID.jpg",
     						"type": "http://activitystrea.ms/2.0/Link",
     						"mediaType": "image/jpeg"
   					}
  				},
      				"target": {
        				"type": “group”,// or subgroup or microgroup
        				"id": “subgroupID1”, //orgID or orgID>subgroupID or orgID>subgroupID>microgroupID; an index should be set on this
					“url”: “orgID1/subgroupID1”
        				"displayName": “The subgroup’s Title”
        					        				
      				}
      				
    				
			}
		}
	   }

	}

}

subgroup-activity-streams : { 
	groupID1 : {
	  subgroupID : {
		autoGeneratedTimestampBasedID : { // using the standard http://www.w3.org/TR/activitystreams-core/ , http://www.w3.org/TR/2014/WD-activitystreams-vocabulary-20141023/ 
						  // http://activitystrea.ms/specs/json/1.0/
			{
      				"language": "en",
      				"verb": “check-in”, //or check-out
      				"published": timestamp,
      				"displayName": “Zia Khan checked-in at Panacloud Meatone office: /n” + status message,
      				"actor": {
        				"type": “user”,
        				"id": “zia”, //this is the userID, and an index should be set on this
       					"displayName": “Zia Khan”,
					"image": {
     						"@id": "http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50",
     						"@type": "http://activitystrea.ms/2.0/Link",
     						"mediaType": "image/jpeg"
   					}
        			}      								
				"object" : {
   					"@type": “location”,
   					"@id": “autoGeneratedTimestampBasedRecordID”, //an index should be set on this
   					"url": “groupID/subgroupID1/checkin/autoGeneratedTimestampBasedRecordID”,
   					"displayName": “The location Title” //or “Another Location” if undefined
					"image": {//included if location is defined and has an image
     						"id": "http://www.google.com/gc/locationBucket/orgID1/autoGeneratedTimestampBasedID.jpg",
     						"type": "http://activitystrea.ms/2.0/Link",
     						"mediaType": "image/jpeg"
   					}
  				},
      				"target": {
        				"type": “group”,// or subgroup or microgroup
        				"id": “subgroupID1”, //orgID or orgID>subgroupID or orgID>subgroupID>microgroupID; an index should be set on this
					“url”: “orgID1/subgroupID1”
        				"displayName": “The subgroup’s Title”
        					        				
      				}
      				
    				
			}
		}
	   }

	}

}



microgroup-activity-streams : { 
	groupID1 : {
 	   subgroupID1: {
	     microgroupID1 : {
		autoGeneratedTimestampBasedID : { // using the standard http://www.w3.org/TR/activitystreams-core/ , http://www.w3.org/TR/2014/WD-activitystreams-vocabulary-20141023/ 
						  // http://activitystrea.ms/specs/json/1.0/
			{
      				"language": "en",
      				"verb": “check-in”, //or check-out
      				"published": timestamp,
      				"displayName": “Zia Khan checked-in at Panacloud Meatone office: /n” + status message,
      				"actor": {
        				"type": “user”,
        				"id": “zia”, //this is the userID, and an index should be set on this
       					"displayName": “Zia Khan”,
					"image": {
     						"@id": "http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50",
     						"@type": "http://activitystrea.ms/2.0/Link",
     						"mediaType": "image/jpeg"
   					}
        			}      								
				"object" : {
   					"@type": “location”,
   					"@id": “autoGeneratedTimestampBasedRecordID”, //an index should be set on this
   					"url": “groupID/subgroupID1/checkin/autoGeneratedTimestampBasedRecordID”,
   					"displayName": “The location Title” //or “Another Location” if undefined
					"image": {//included if location is defined and has an image
     						"id": "http://www.google.com/gc/locationBucket/orgID1/autoGeneratedTimestampBasedID.jpg",
     						"type": "http://activitystrea.ms/2.0/Link",
     						"mediaType": "image/jpeg"
   					}
  				},
      				"target": {
        				"type": “subgroup”,// or subgroup or microgroup
        				"id": “subgroupID1”, //orgID or orgID>subgroupID or orgID>subgroupID>microgroupID; an index should be set on this
					“url”: “groupID1/subgroupID1”
        				"displayName": “The subgroup’s Title”
        					        				
      				}
      				
    				
			}
		}
	      }
	    }

	}

}

microgroup-activity-streams : { 
	groupID1 : {
	  subgroupid : {
	     microgroupid: {
		autoGeneratedTimestampBasedID : { // using the standard http://www.w3.org/TR/activitystreams-core/ , http://www.w3.org/TR/2014/WD-activitystreams-vocabulary-20141023/ 
						  // http://activitystrea.ms/specs/json/1.0/
			{
      				"language": "en",
      				"verb": “check-in”, //or check-out
      				"published": timestamp,
      				"displayName": “Zia Khan checked-in at Panacloud Meatone office: /n” + status message,
      				"actor": {
        				"type": “user”,
        				"id": “zia”, //this is the userID, and an index should be set on this
       					"displayName": “Zia Khan”,
					"image": {
     						"@id": "http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50",
     						"@type": "http://activitystrea.ms/2.0/Link",
     						"mediaType": "image/jpeg"
   					}
        			}      								
				"object" : {
   					"@type": “location”,
   					"@id": “autoGeneratedTimestampBasedRecordID”, //an index should be set on this
   					"url": “groupID/subgroupID1/checkin/autoGeneratedTimestampBasedRecordID”,
   					"displayName": “The location Title” //or “Another Location” if undefined
					"image": {//included if location is defined and has an image
     						"id": "http://www.google.com/gc/locationBucket/orgID1/autoGeneratedTimestampBasedID.jpg",
     						"type": "http://activitystrea.ms/2.0/Link",
     						"mediaType": "image/jpeg"
   					}
  				},
      				"target": {
        				"type": “microgroup”,// or subgroup or microgroup
        				"id": “microgroupID1”, //orgID or orgID>subgroupID or orgID>subgroupID>microgroupID; an index should be set on this
					“url”: “groupID1/subgroupID1/microgroupID1”
        				"displayName": “The subgroup’s Title”
        					        				
      				}
      				
    				
			}
		}
	      }
	   }

	}

}


