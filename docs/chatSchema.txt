{

	group-chats: {
	  groupid : {
		chatid : {
			title: My topic,
			timestamp: 23454,
			created-by: userid,
			messages: {
				autogenerated-id: {
					from: userid,
					timestamp: 1234565,
					text: “The text message”,
					attachment : {
						url: “https://dl.dropboxusercontent.com/u/89695208/Books/Hybrid/Ionic_in_Action_v7_MEAP.pdf”
					}
					seen-by : {
						userid1: 23456765,//timestamp
						userid2: 76543334
					}

				}

			}

		}
	  }


	},



	user—private-chat-refs : {
		userid1 : {
			groupid: {
				chatid1: true
			}

		},
		userid2 : {
			groupid: {
				chatid1: true
			}
		}

	},

	group-private-chats : {
		groupid : {
				chatid1 : {//khalid>zia

						autogenerated-id: {
							from: userid1,
							to: userid2,
							timestamp: 1234565,
							text: “The text message”,
							attachment : {
								url: “https://dl.dropboxusercontent.com/u/89695208/Books/Hybrid/Ionic_in_Action_v7_MEAP.pdf”
							}
							seen-at : 23456765,//timestamp
							

						}					




				}
			}
		}
	}

}



{
	rules : {
		"group-chats": {
          "$groupid": {
            ".read": "(auth != null) && root.child('group-members').child($groupid).child(auth.uid).exists() && root.child('group-members').child($groupid).child(auth.uid).child('membership-type').val() > 0",
            ".write" : "(auth != null) && root.child('group-members').child($groupid).child(auth.uid).exists() && root.child('group-members').child($groupid).child(auth.uid).child('membership-type').val() > 0",
            ".validate": "(root.child('groups/' + $groupid).exists())",
            "$chattopicid": {
              ".validate": "newData.hasChildren(['title', 'timestamp', 'created-by'])",
               "title": {
                ".validate": "newData.isString() && newData.val().length > 3 && newData.val().length <= 100"
               },
             "timestamp": {
                ".validate": "newData.isNumber() && newData.val() <= now"
               },
              "created-by": {
                ".validate": "(root.child('users/' + newData.val()).exists() && auth.uid == newData.val())"
               },
              "messages": {
                 "$messageid": {
                  ".validate": "!data.exists() && newData.hasChildren(['from', 'timestamp', 'text'])" 
                 }
                 
               }
            }
          } 
        },

		


	 	group-private-chats: {//http://stackoverflow.com/questions/29380969/firebase-private-chat-schema-and-rules
			  “$groupid” : {
				“$chatid”: {
					“.read”: “(auth != null) && root.child(‘user—private-chat-refs’).child(auth.uid).child($groupid).child($chatid).exists()”,
					
					“$automessageid: {
						“.write”: “(auth != null) && root.child(‘user—private-chat-refs’).child(auth.uid).child($groupid).child($chatid).exists() && !data.exists()”
					}
			  }

			}

		},



		user—private-chat-refs : {
			“$userid”: {
				“$groupid” : {
					“.read”: “auth != null && auth.uid == $userid”,
					“.write”: “auth != null && auth.uid == $userid && root.child('user-group-memberships').child(auth.uid).child($groupid).exists() && root.child('user-group-memberships').child(auth.uid).child($groupid).child('membership-type').val() > 0”

				}
			}

		}





	}


}